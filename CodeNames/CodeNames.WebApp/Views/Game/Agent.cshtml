@using CodeNames.Models.DTO
@model CodeNames.WebApp.Models.GameViewModel
@{
	ViewBag.Title = "Code Names - Agent";
}

<h1>Codename</h1>

<div class="row cn-cards-count">
	<div class="col-md-3 my-2">
		<div class="cn-count">
			<img src="/Content/Images/blue-woman.png" alt="Cartes bleus"/>
			x
			<span>@Model.CardList.Count(c => c.Color == Color.Blue)</span>
		</div>
	</div>
	<div class="col-md-3 my-2">
		<div class="cn-count">
			<img src="/Content/Images/red-man.png" alt="Cartes rouge"/>
			x
			<span>@Model.CardList.Count(c => c.Color == Color.Red)</span>
		</div>
	</div>
	<div class="col-md-3 my-2">
		<div class="cn-count">
			<img src="/Content/Images/beige-man.png" alt="Cartes beiges"/>
			x
			<span>@Model.CardList.Count(c => c.Color == Color.Beige)</span>
		</div>
	</div>
	<div class="col-md-3 my-2">
		<div class="cn-count">
			<img src="/Content/Images/assassin.png" alt="Cartes noir"/>
			x
			<span>@Model.CardList.Count(c => c.Color == Color.Black)</span>
		</div>
	</div>
</div>

<div class="row my-4 py-2 cn-spy-master-toolbar @(Model.FirstPlayer == Color.Blue ? "blue-turn" : "red-turn")">
	<form class="form-inline w-100 row">
		<div class="form-group pl-5 col-sm-6">
			<div id="userMessageContainer">
				<span id="userMessage" style="width:430px;">
					... en attente de votre Espion @(Model.FirstPlayer == Color.Blue ? "Bleu" : "Rouge") ...
				</span>
				<br/>
				<span id="hintContainer" style="opacity:0;">indice: "<b id="hintWord"></b>", nombre de mots: <b id="nbrWord"></b></span>
			</div>
			@*... en attente de votre agent*@
		</div>
		<div class="col-sm-6">
		<button type="button" id="btnConfirm" class="float-right btn btn-primary">Terminé</button>	
		</div>
	</form>
</div>

<div class="row">
	<div class="col-12">
		@for (var i = 0; i < 5; i++)
		{
			<div class="cn-card-line d-flex flex-row w-100 mb-2">
				@for (var j = 0; j < 5; j++)
				{
					var card = Model.Cards[i, j];
					<div class="cn-card-container flex-fill mx-1">
						<div class="cn-word-card-container">
							<div class="cn-word-card">
								<a href="#" class="w-100 h-100" data-card-x="@i" data-card-y="@j">
									<span class="flip">@card.Word</span>
									<span class="main">@card.Word</span>
								</a>
							</div>
						</div>
					</div>
				}
			</div>
		}
	</div>
</div>

<input type="hidden" id="gameKey" value="@Model.Key"/>
<input type="hidden" id="playerType" value="@PlayerType.Agent"/>
<input type="hidden" id="firstPlayer" value="@((int)Model.FirstPlayer)"/>

@section scripts {
	<script src="/Content/Scripts/jquery.signalR-2.4.1.js"></script>
	<script src="~/signalr/hubs"></script>

	<script>
        $(function () {
            let currentPlayer = $("#firstPlayer").val();
            const userMessageContainer = $("#userMessageContainer")
            const userMessage = $("#userMessage");
            const hintContainer = $("#hintContainer");
            
            const bluePlayer = @((int)Color.Blue);
            const redPlayer = @((int)Color.Red);
            const beigeCard = @((int)Color.Beige);
            const assassinCard = @((int)Color.Black);
            
            const gameKey = $("#gameKey").val();
            const currentPlayerType = $("#playerType").val();
            const gameHub = $.connection.gameHub;
            
            gameHub.client.hint = function(word, nbrCard, player) {
                console.log("Received " + word + " " + nbrCard);
                currentPlayer = player;
                userMessageContainer.animate({opacity: 0}, "slow", function(){
                	userMessage.html("Agent " + (player === bluePlayer ? "Bleu" : "Rouge") + ", faites vos choix.");
                	$("#hintWord").text(word);
                	$("#nbrWord").text(nbrCard);
                	hintContainer.css("opacity", 1);
                	userMessageContainer.animate({opacity: 1}, "slow");
                });
            }
            
            gameHub.client.agentChoose = function(result){
              console.log(result);
              let card;
              switch (result.CardColor) {
					case bluePlayer:
						card = "blue-man";
						break;
					case redPlayer:
						card = "red-woman";
                        break;
                    case beigeCard:
						card = "beige-man";
						break;
					case assassinCard:
						card = "assassin";
						break;
				}
              const img = $("<img alt=\"\"  id=\"blueCardTmp\" class=\"cn-new-card\" src=\"/Content/Images/"+card+".png\" style=\"margin-bottom: 5px; border-radius:  5px;\" />"); 
              $(".cn-card-line:eq("+result.X+") .cn-card-container:eq("+result.Y+") .cn-word-card-container").append(img);
              img.animate({opacity: 1}, 1200);
            };
            
            // $("#btnConfirm").click(function() {
            //    $(this).prop("disabled", "disabled");
            //    console.log("calling server for hint")
            //    gameHub.server.giveHint(gameKey, $("#hintWord").val(), nbrWordsInput.val()); 
            // });
            
            $(".cn-word-card a").click(function(e){
            	e.preventDefault();
            	var lnk = $(this);
            	var x = lnk.data("cardX");
            	var y = lnk.data("cardY");
            	gameHub.server.chooseCard(gameKey, x, y, currentPlayer);
            });
             
            $.connection.hub.logging = true;
            $.connection.hub.start().done(function () {
                console.log("join with gamekey " + gameKey);
                gameHub.server.joinGame(gameKey, currentPlayerType);
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}