@using CodeNames.Models.DTO
@model CodeNames.WebApp.Models.GameViewModel
@{
    ViewBag.Title = "Home Page";
}

@functions
{
    string GetColor(Color color)
    {
        switch (color)
        {
            case Color.Red:
                return "red";
            case Color.Blue:
                return "blue";
            case Color.Black:
                return "black";
            case Color.Beige:
                return "beige";
            default:
                throw new ArgumentOutOfRangeException(nameof(color), color, null);
        }
    }
}

<h1>Codename</h1>

<div class="row">
    <div class="col-10">
        @for (int i = 0; i < 5; i++)
        {
            <div class="cn-card-line d-flex flex-row w-100 mb-2">
                @for (int j = 0; j < 5; j++)
                {
                    <div class="cn-card-container flex-fill">
                        <div class="cn-card">
                            <span class="flip">@Model.Cards[i, j].Word</span>
                            <span class="main">@Model.Cards[i, j].Word</span>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
    <div class="col-2">
        <div>
        	<img src="/Content/Images/blue-man.png" style="margin-bottom: 5px; border-radius:  5px;" alt="Cartes bleus"/>    
        </div>
        <div>
        	<img src="/Content/Images/red-woman.png" style="margin-bottom: 5px; border-radius: 5px;" alt="Cartes rouges"/>    
        </div>
        <div class="cn-key-container @(Model.FirstPlayer == Color.Blue ? "blue" : "red")">
        	@for (int i = 0; i < 5; i++)
        	{
        		<div class="d-flex flex-row cn-key-line">
        			@for (int j = 0; j < 5; j++)
        			{
        				<div class="flex-fill key-dot"><img src="/Content/Images/dot-@(GetColor(Model.Cards[i,j].Color)).png" alt="Position @i @j couleur @Model.Cards[i,j].Color" /></div>
        			}
        		</div>
        	}
        </div>
    </div>
</div>
