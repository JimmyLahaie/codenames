@using CodeNames.Models.DTO
@model CodeNames.WebApp.Models.GameViewModel
@{
	ViewBag.Title = "Code Names - Spy Agent";
}

<h1>Codename</h1>
<div class="row cn-cards-count">
	<div class="col-md-3 my-2">
		<div class="cn-count">
			<img src="/Content/Images/blue-woman.png" alt="Cartes bleus"/>
			x
			<span>@Model.CardList.Count(c => c.Color == Color.Blue)</span>
		</div>
	</div>
	<div class="col-md-3 my-2">
		<div class="cn-count">
			<img src="/Content/Images/red-man.png" alt="Cartes rouge"/>
			x
			<span>@Model.CardList.Count(c => c.Color == Color.Red)</span>
		</div>
	</div>
	<div class="col-md-3 my-2">
		<div class="cn-count">
			<img src="/Content/Images/beige-man.png" alt="Cartes beiges"/>
			x
			<span>@Model.CardList.Count(c => c.Color == Color.Beige)</span>
		</div>
	</div>
	<div class="col-md-3 my-2">
		<div class="cn-count">
			<img src="/Content/Images/assassin.png" alt="Cartes noir"/>
			x
			<span>@Model.CardList.Count(c => c.Color == Color.Black)</span>
		</div>
	</div>
</div>

<div class="row my-4 py-2 cn-spy-master-toolbar @(Model.FirstPlayer == Color.Blue ? "blue-turn" : "red-turn")">
	<form class="form-inline">
		<div class="form-group mx-4">
			<span id="userMessage" style="width:430px;">Espion @(Model.FirstPlayer == Color.Blue ? "Bleu" : "Rouge"), donnez votre indice et le nombre de mots.</span> @*... en attente de votre agent*@
		</div>
		<div class="form-group mx-4">
			<label for="hintWord" class="sr-only">Votre indice</label>
			<input type="text" maxlength="50" class="form-control" id="hintWord" placeholder="Votre indice">
		</div>
		<div class="input-group mx-4 noSpinner">
			<div class="input-group-prepend">
				<button class="btn btn-outline-secondary" type="button" name="btnNbrWord" value="-1">-</button>
			</div>
			<input type="number" min="0" max="9" step="1" id="nbrWords" class="form-control " value="1" style="width:40px; flex: none;">
			<div class="input-group-append">
				<button class="btn btn-outline-secondary" type="button" name="btnNbrWord" value="1">+</button>
			</div>
		</div>
		<div class="form-group mx-4">
			<button type="button" id="btnConfirm" class="btn btn-primary">Confirmer</button>
		</div>
	</form>
</div>

<div class="row mb-5">
	<div class="col-12">
		@for (var i = 0; i < 5; i++)
		{
			<div class="cn-card-line d-flex flex-row w-100 mb-2">
				@for (var j = 0; j < 5; j++)
				{
					var card = Model.Cards[i, j];
					<div class="cn-card-container flex-fill mx-1">
						<div class="cn-word-card-container">
							<div class="cn-word-card @(card.Color == Color.Blue ? "hint-blue" : "") @(card.Color == Color.Red ? "hint-red" : "") @(card.Color == Color.Black ? "hint-black" : "")">
								<span class="flip">@Model.Cards[i, j].Word</span>
								<span class="main">@Model.Cards[i, j].Word</span>
							</div>
						</div>
					</div>
				}
			</div>
		}
	</div>
</div>

<input type="hidden" id="gameKey" value="@Model.Key"/>
<input type="hidden" id="playerType" value="@PlayerType.SpyMaster"/>
<input type="hidden" id="firstPlayer" value="@((int)Model.FirstPlayer)"/>

@section scripts {
	<script src="/Content/Scripts/jquery.signalR-2.4.1.js"></script>
	<script src="~/signalr/hubs"></script>

	<script>
    
		//	$(".cn-spy-master-toolbar").removeClass("blue-turn").addClass("red-turn")
    
        $(function () {
            const nbrWordsInput = $("#nbrWords");
            const userMessage = $("#userMessage");
            const currentPlayer = $("#firstPlayer").val();
            
            const bluePlayer = @((int)Color.Blue);
            const redPlayer = @((int)Color.Red);
            const beigeCard = @((int)Color.Beige);
			const assassinCard = @((int)Color.Black);
            
            
            $("button[name='btnNbrWord']").click(function(){
               const toAdd = parseInt($(this).val());
               const newVal = parseInt(nbrWordsInput.val()) + toAdd;
               if (newVal >= 0 && newVal <= 9) {
                nbrWordsInput.val(newVal);        
               }
            });
            
            const gameKey = $("#gameKey").val();
            const currentPlayerType = $("#playerType").val();
            const gameHub = $.connection.gameHub;
            
            gameHub.client.hint = function(word, nbrCard, player) {
                console.log("Received " + word + " " + nbrCard + " " + player);
                userMessage.animate({opacity: 0}, "slow", function(){
                	userMessage.html("... en attente de l'agent " + (player === bluePlayer ? "Bleu" : "Rouge") + " ...");
                    userMessage.animate({opacity: 1}, "slow");	
                });
            }
            
            gameHub.client.agentChoose = function(result){
              console.log(result);
               let card;
				switch (result.CardColor) {
					case bluePlayer:
						card = "blue-man";
						break;
					case redPlayer:
						card = "red-woman";
						break;
					  case beigeCard:
						card = "beige-woman";
						break;
					case assassinCard:
						card = "assassin";
						break;
				}
              const img = $("<img alt=\"\"  id=\"blueCardTmp\" class=\"cn-new-card\" src=\"/Content/Images/"+card+".png\" style=\"margin-bottom: 5px; border-radius:  5px;\" />"); 
              $(".cn-card-line:eq("+result.X+") .cn-card-container:eq("+result.Y+") .cn-word-card-container").append(img);
              img.animate({opacity: 1}, 1200);
            };
            
            $("#btnConfirm").click(function() {	
               $(".cn-spy-master-toolbar :input").prop("disabled", "disabled");
               
               gameHub.server.giveHint(gameKey, $("#hintWord").val(), nbrWordsInput.val(), currentPlayer); 
            });
             
            $.connection.hub.logging = true;
            $.connection.hub.start().done(function () {
                console.log("join with gamekey " + gameKey);
                gameHub.server.joinGame(gameKey, currentPlayerType);
            });
        });
    </script>
}